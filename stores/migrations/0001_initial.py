# Generated by Django 5.2 on 2025-08-16 10:19

import cloudinary.models
import django.core.validators
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_method', models.CharField(choices=[('MovBay_Dispatch', 'MovBay_Dispatch'), ('Speedy_Dispatch', 'Speedy_Dispatch'), ('Pickup_Hub', 'Pickup_Hub')], max_length=250)),
                ('fullname', models.CharField(blank=True, max_length=250, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator(message='Enter a valid email address')])),
                ('delivery_address', models.TextField()),
                ('landmark', models.CharField(blank=True, max_length=250, null=True)),
                ('city', models.CharField(blank=True, max_length=250, null=True)),
                ('state', models.CharField(blank=True, max_length=250, null=True)),
                ('alternative_address', models.CharField(blank=True, max_length=250, null=True)),
                ('alternative_name', models.CharField(blank=True, max_length=250, null=True)),
                ('alternative_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='NG')),
                ('alternative_email', models.EmailField(blank=True, db_index=True, max_length=254, null=True, validators=[django.core.validators.EmailValidator(message='Enter a valid email address')])),
                ('postal_code', models.PositiveBigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmed', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('new', 'New Orders'), ('processing', 'Processing'), ('assigned', 'assigned'), ('out_for_delivery', 'Out for Delivery'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='new', max_length=250)),
                ('order_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('amount', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('ride_accepted', models.BooleanField(default=False)),
                ('assigned', models.BooleanField(default=False)),
                ('out_for_delivery', models.BooleanField(default=False)),
                ('locked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('otp_secret', models.CharField(blank=True, max_length=250, null=True)),
                ('code', models.CharField(blank=True, max_length=250, null=True)),
                ('completed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='OrderDispute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='OrderHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField(default=1)),
                ('amount', models.PositiveBigIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_accepted', models.BooleanField(default=False)),
                ('marked_for_delivery', models.BooleanField(default=False)),
                ('item_picked', models.BooleanField(default=False)),
                ('rider_en_route', models.BooleanField(default=False)),
                ('arriving_soon', models.BooleanField(default=False, null=True)),
                ('completed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=40, null=True)),
                ('category', models.CharField(blank=True, max_length=250, null=True)),
                ('brand', models.CharField(blank=True, max_length=250, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('product_video', models.FileField(blank=True, null=True, upload_to='', verbose_name='videos')),
                ('video_url', models.URLField(blank=True, null=True)),
                ('original_price', models.PositiveBigIntegerField(default=0)),
                ('discounted_price', models.PositiveBigIntegerField(default=0)),
                ('condition', models.CharField(blank=True, choices=[('New', 'New'), ('Used', 'Used'), ('Refurbished', 'Refurbished')], max_length=300, null=True)),
                ('verified', models.BooleanField(db_index=True, default=False)),
                ('stock_available', models.IntegerField(blank=True, default=1, null=True)),
                ('size', models.CharField(blank=True, max_length=250, null=True)),
                ('pickup_available', models.BooleanField(default=True)),
                ('delivery_available', models.BooleanField(default=True)),
                ('delivery_type', models.CharField(blank=True, choices=[('Movbay_Express', 'Movbay_Express'), ('Speedy_Dispatch', 'Speedy_Dispatch'), ('Pickup_Hub', 'Pickup_Hub')], max_length=250, null=True)),
                ('auto_post_to_story', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'ordering': ['-verified'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='temp/')),
                ('image_url', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.CharField(choices=[('1Star', '1Star'), ('2Star', '2Star'), ('3Star', '3Star'), ('4Star', '4Star'), ('5Star', '5Star')], max_length=250)),
                ('comment', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='store/')),
                ('image_url', models.URLField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('category', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('description', models.TextField()),
                ('address1', models.TextField()),
                ('address2', models.TextField()),
                ('store_image', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='store/pp')),
                ('store_image_url', models.URLField(null=True)),
                ('nin', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='store/nin')),
                ('nin_url', models.URLField(blank=True)),
                ('cac', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='store/cac')),
                ('cac_url', models.URLField(null=True)),
                ('verified', models.BooleanField(default=False)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StoreFollow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('followed_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
    ]
