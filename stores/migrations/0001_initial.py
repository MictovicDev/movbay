# Generated by Django 5.2 on 2025-05-29 16:56

import cloudinary.models
import django.core.validators
import django.db.models.deletion
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_method', models.CharField(choices=[('MovBay_Dispatch', 'MovBay_Dispatch'), ('Speedy_Dispatch', 'Speedy_Dispatch'), ('Pickup_Hub', 'Pickup_Hub')], max_length=250)),
                ('recipient_name', models.CharField(max_length=250)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator(message='Enter a valid email address')])),
                ('delivery_address', models.TextField()),
                ('landmark', models.CharField(blank=True, max_length=250, null=True)),
                ('city', models.CharField(blank=True, max_length=250, null=True)),
                ('state', models.CharField(blank=True, max_length=250, null=True)),
                ('postal_code', models.PositiveBigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=40, null=True)),
                ('category', models.CharField(blank=True, max_length=250, null=True)),
                ('brand', models.CharField(blank=True, max_length=250, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image1', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='image')),
                ('image2', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='image')),
                ('image3', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='image')),
                ('product_video', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='video')),
                ('name', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('original_price', models.PositiveBigIntegerField(default=0)),
                ('discounted_price', models.PositiveBigIntegerField(default=0)),
                ('condition', models.CharField(blank=True, choices=[('New', 'New'), ('Used', 'Used'), ('Refurbished', 'Refurbished')], max_length=300, null=True)),
                ('verified', models.BooleanField(db_index=True, default=False)),
                ('stock_available', models.PositiveBigIntegerField(blank=True, null=True)),
                ('size', models.CharField(blank=True, max_length=250, null=True)),
                ('pickup_available', models.BooleanField(default=True)),
                ('delivery_available', models.BooleanField(default=True)),
                ('auto_post_to_story', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'ordering': ['-verified', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmed', models.BooleanField(default=False)),
                ('delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stores.delivery', verbose_name='delivery_details')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ManyToManyField(blank=True, null=True, to='stores.product')),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='stores.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stores.product')),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('category', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('description', models.TextField()),
                ('address1', models.TextField()),
                ('address2', models.TextField()),
                ('store_image', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='image')),
                ('nin', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='image')),
                ('cac', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='file')),
                ('owner', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='stores.store'),
        ),
        migrations.AddField(
            model_name='delivery',
            name='store',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stores.store'),
        ),
        migrations.CreateModel(
            name='StoreFollower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('followed_at', models.DateTimeField(auto_now_add=True)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='store_followers', to='stores.store')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='store_followings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='store',
            name='followers',
            field=models.ManyToManyField(related_name='followed_stores', through='stores.StoreFollower', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='StoreStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, null=True)),
                ('image1', models.ImageField(blank=True, null=True, upload_to='Store/Status')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='Store/Status')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='Store/Status')),
                ('image4', models.ImageField(blank=True, null=True, upload_to='Store/Status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuses', to='stores.store')),
            ],
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['store'], name='stores_prod_store_i_c595ef_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='stores_prod_name_f67284_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['verified'], name='stores_prod_verifie_62d07c_idx'),
        ),
        migrations.AddIndex(
            model_name='storefollower',
            index=models.Index(fields=['store'], name='stores_stor_store_i_6644e2_idx'),
        ),
        migrations.AddIndex(
            model_name='storefollower',
            index=models.Index(fields=['user'], name='stores_stor_user_id_4a82ef_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='storefollower',
            unique_together={('store', 'user')},
        ),
        migrations.AddIndex(
            model_name='store',
            index=models.Index(fields=['name'], name='stores_stor_name_988b60_idx'),
        ),
        migrations.AddIndex(
            model_name='store',
            index=models.Index(fields=['category'], name='stores_stor_categor_a7d0c7_idx'),
        ),
        migrations.AddIndex(
            model_name='store',
            index=models.Index(fields=['owner'], name='stores_stor_owner_i_731905_idx'),
        ),
    ]
